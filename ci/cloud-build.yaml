
steps:
- id: 'docker build'
  name: 'docker'
  args: 
  -  'build'
  -  '-t'
  -  'europe-west1-docker.pkg.dev/$PROJECT_ID/${_REPOSITORY}/${_IMAGE}:latest'
  -  '-t'
  -  'europe-west1-docker.pkg.dev/$PROJECT_ID/${_REPOSITORY}/${_IMAGE}:$TAG_NAME'
  -  '.'


- id: Create Deployment
  name: gcr.io/cloud-builders/kubectl
  args: ['apply', '-f', 'k8s/02_web_deployment.yaml']
  env:
    - CLOUDSDK_COMPUTE_REGION=europe-west1
    - CLOUDSDK_CONTAINER_CLUSTER=mmds-nuwe-lucabem-cluster


- id: Updating Deployment
  name: gcr.io/cloud-builders/kubectl
  args: ['set', 'image', 'deployment/web-deployment', 'web=europe-west1-docker.pkg.dev/$PROJECT_ID/${_REPOSITORY}/${_IMAGE}:$TAG_NAME']
  env:
    - CLOUDSDK_COMPUTE_REGION=europe-west1
    - CLOUDSDK_CONTAINER_CLUSTER=mmds-nuwe-lucabem-cluster


- id: Create Service
  name: gcr.io/cloud-builders/kubectl
  args: ['apply', '-f', 'k8s/03_web_service.yaml']
  env:
    - CLOUDSDK_COMPUTE_REGION=europe-west1
    - CLOUDSDK_CONTAINER_CLUSTER=mmds-nuwe-lucabem-cluster

# - id: 'tf init'
#   name: 'hashicorp/terraform:1.2.0'
#   entrypoint: 'sh'
#   args:
#   - '-c'
#   - terraform init

# - id: 'tf plan'
#   name: 'hashicorp/terraform:1.2.0'
#   entrypoint: 'sh'
#   args:
#   - '-c'
#   - terraform plan


# - id: 'tf apply'
#   name: 'hashicorp/terraform:1.2.0'
#   entrypoint: 'sh'
#   args:
#   - '-c'
#   - terraform apply -var tag_name=$TAG_NAME -auto-approve



options:
  logging: CLOUD_LOGGING_ONLY

images:
- 'europe-west1-docker.pkg.dev/${PROJECT_ID}/${_REPOSITORY}/${_IMAGE}:$TAG_NAME'
- 'europe-west1-docker.pkg.dev/${PROJECT_ID}/${_REPOSITORY}/${_IMAGE}:latest'

